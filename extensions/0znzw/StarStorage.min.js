/**!
 * StarStorage
 * @author 0znzw <meow@miyo.lol> (@link https://scratch.mit.edu/users/0znzw/)
 * @version 1.1
 * @license MIT AND LGPL-3.0
 * Do not remove this comment
 * 
 * @todo Swap out the indexed DB handler.
 */
!function(e){"use strict";if(!e.extensions.unsandboxed)throw new Error('"* Storage" must run unsandboxed.');const t="0znzwStarStorage",{BlockType:o,ArgumentType:r,Cast:a,vm:s}=e,{runtime:n}=s;n.extensionStorage??={},n.extensionStorage[t]??={},n.extensionStorage[t].key??=(Math.floor(1e4*Math.random())+Date.now()).toString(36);let i=n.extensionStorage[t].key;function l(e,t,o){const r=new Date;r.setTime(r.getTime()+24*o*60*60*1e3);let a="expires="+r.toUTCString();document.cookie=e+"="+t+";"+a+";path=/"}function u(e){let t=e+"=",o=decodeURIComponent(document.cookie).split(";");for(let e=0;e<o.length;e++){let r=o[e];for(;" "==r.charAt(0);)r=r.substring(1);if(0==r.indexOf(t))return r.substring(t.length,r.length)}return""}const c=new class{constructor(){this.dbName=i,this.dbVersion=1,this.db}setDBName(e){this.dbName=e,this.initializeDatabase()}initializeDatabase(){const e=indexedDB.open(this.dbName,this.dbVersion);e.onerror=function(e){console.error("IndexedDB error:",e.target.error)},e.onsuccess=e=>{this.db=e.target.result},e.onupgradeneeded=e=>{this.db=e.target.result;this.db.createObjectStore("data",{keyPath:"key"})}}writeToDatabase(e,t){this.db.transaction(["data"],"readwrite").objectStore("data").put({key:e,value:t})}async readFromDatabase(e){return new Promise(((t,o)=>{const r=this.db.transaction(["data"],"readonly").objectStore("data").get(e);r.onsuccess=function(e){t(e.target.result?e.target.result.value:null)},r.onerror=function(e){o("Error reading from database")}}))}async getAllKeys(){return new Promise(((e,t)=>{const o=this.db.transaction(["data"],"readonly").objectStore("data").getAllKeys();o.onsuccess=function(t){const o=t.target.result,r=JSON.stringify(o);e(r)},o.onerror=function(e){t("Error getting keys from database")}}))}async keyExists(e){return(await this.getAllKeys()).includes(e)}deleteFromDatabase(e){this.db.transaction(["data"],"readwrite").objectStore("data").delete(e)}};c.setDBName(i);e.extensions.register(n[`ext_${t}`]=new class{getInfo(){return{id:t,name:"* Storage",blocks:[{blockType:o.COMMAND,opcode:"setStorageKey",text:"use storage [KEY]",arguments:{KEY:{type:r.STRING,defaultValue:i}}},{blockType:o.BOOLEAN,opcode:"hasKey",text:"[KEY] exists in [TYPE]?",arguments:{KEY:{type:r.STRING,defaultValue:"foo"},TYPE:{type:r.STRING,menu:"TYPES",defaultValue:"localStorage"}}},{blockType:o.REPORTER,opcode:"getKey",text:"get [KEY] from [TYPE]",arguments:{KEY:{type:r.STRING,defaultValue:"foo"},TYPE:{type:r.STRING,menu:"TYPES",defaultValue:"localStorage"}},allowDropAnywhere:!0},{blockType:o.COMMAND,opcode:"setKey",text:"set [KEY] in [TYPE] to [VALUE]",arguments:{KEY:{type:r.STRING,defaultValue:"foo"},VALUE:{type:r.STRING,defaultValue:"bar"},TYPE:{type:r.STRING,menu:"TYPES",defaultValue:"localStorage"}}},{blockType:o.COMMAND,opcode:"deleteKey",text:"delete [KEY] from [TYPE]",arguments:{KEY:{type:r.STRING,defaultValue:"foo"},TYPE:{type:r.STRING,menu:"TYPES",defaultValue:"localStorage"}}}],menus:{TYPES:{items:["localStorage","sessionStorage","cookies","indexedDB"],acceptReporters:!0}}}}setStorageKey({KEY:e}){e=`${a.toString(e)}`,n.extensionStorage[t].key=e,c.setDBName(e),i=e}setKey({KEY:e,TYPE:t,VALUE:o}){switch(e=`${i}${a.toString(e)}`,o=a.toString(o),t=a.toString(t).toLowerCase()){case"sessionstorage":return sessionStorage.setItem(e,o);case"cookies":return l(e,o,365);case"indexeddb":return c.writeToDatabase(e,o);default:return localStorage.setItem(e,o)}}getKey({KEY:e,TYPE:t}){switch(e=`${i}${a.toString(e)}`,t=a.toString(t).toLowerCase()){case"sessionstorage":return sessionStorage.getItem(e)??"";case"cookies":return u(e)??"";case"indexeddb":return c.readFromDatabase(e)??"";default:return localStorage.getItem(e)??""}}hasKey({KEY:e,TYPE:t}){switch(e=`${i}${a.toString(e)}`,t=a.toString(t).toLowerCase()){case"sessionstorage":return null!==sessionStorage.getItem(e);case"cookies":return""!==u(e);case"indexeddb":return c.keyExists(e);default:return null!==localStorage.getItem(e)}}deleteKey({KEY:e,TYPE:t}){switch(e=`${i}${a.toString(e)}`,t=a.toString(t).toLowerCase()){case"sessionstorage":return sessionStorage.removeItem(e);case"cookies":return l(e,"",365);case"indexeddb":return c.deleteFromDatabase(e);default:return localStorage.removeItem(e)}}deserialize(e){n.extensionStorage[t]=e[t]}serialize(){return{extId:n.extensionStorage[t]}}})}(Scratch);