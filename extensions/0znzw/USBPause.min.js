/**!
 * USB Pause
 * @author 0znzw <meow@miyo.lol> (@link https://scratch.mit.edu/users/0znzw/)
 * @version 1.0
 * @license MIT AND LGPL-3.0
 * Do not remove this comment
 * Original Concept by SharkPool
 */
!function(e){"use strict";if(!e.extensions.unsandboxed||!e.extensions.isUSB)throw new Error('"USB Pause" must be ran unsandboxed.');const{BlockType:t,ArgumentType:a,Cast:s,vm:u}=e,{runtime:r}=u,o="0znzwUSBPause",n=r.constructor,{Thread:l}=u.exports.i_will_not_ask_for_help_when_these_break();let p;e.gui&&e.gui.getBlockly().then((e=>p=e));e.extensions.register(r[`ext_${o}`]=new class{constructor(){r.on(n.PROJECT_PAUSE,(()=>{r.startHats(`${o}_onStatusChange`).forEach((e=>{e.setStatus(l.STATUS_RUNNING)}))}))}set pauseStatus(e){r.setPause(e)}get pauseStatus(){return r.paused}getInfo(){return{id:o,name:"USB Pause",blocks:[{opcode:"pauseProject",blockType:t.COMMAND,text:"[STATUS] project",arguments:{STATUS:{type:a.STRING,menu:"pause",defaultValue:"pause"}}},"---",{opcode:"pauseTarget",blockType:t.COMMAND,text:"[STATUS] [TARGET]",arguments:{STATUS:{type:a.STRING,menu:"pause",defaultValue:"pause"},TARGET:{type:a.STRING,menu:"sprites",defaultValue:"myself"}}},{opcode:"pauseTargetClones",blockType:t.COMMAND,text:"[STATUS] [TARGET]'s clones",arguments:{STATUS:{type:a.STRING,menu:"pause",defaultValue:"pause"},TARGET:{type:a.STRING,menu:"sprites",defaultValue:"myself"}}},{opcode:"pauseTargetClone",blockType:t.COMMAND,text:"[STATUS] clones of [TARGET] with [VARIABLE] set to [VALUE]",arguments:{STATUS:{type:a.STRING,menu:"pause",defaultValue:"pause"},TARGET:{type:a.STRING,menu:"sprites",defaultValue:"myself"},VARIABLE:{type:a.STRING,menu:"variables"},VALUE:{type:a.STRING,defaultValue:"1"}}},"---",{opcode:"pauseThread",blockType:t.COMMAND,text:"pause thread"},{opcode:"pauseThreadName",blockType:t.COMMAND,text:"[STATUS] thread with id: [NAME]",arguments:{STATUS:{type:a.STRING,menu:"pause",defaultValue:"pause"},NAME:{type:a.STRING,defaultValue:"my thread"}}},"---",{opcode:"getPauseStatus",blockType:t.BOOLEAN,text:"project paused?",disableMonitor:!0},{opcode:"onStatusChange",blockType:t.EVENT,text:"when project pause status changes",isEdgeActivated:!1}],menus:{pause:{items:[{text:"pause",value:"pause"},{text:"unpause",value:"unpause"},{text:"toggle pause status of",value:"toggle"}],acceptReporters:!0,acceptText:!0},sprites:{items:"getSprites",acceptReporters:!0,acceptText:!1},variables:{items:"getVariables",acceptReporters:!0,acceptText:!0}}}}pauseProject({STATUS:e}){e=this.castStatusBool(e),this.pauseStatus!==e&&(this.pauseStatus=e)}pauseTarget({STATUS:e,TARGET:t},a){(t=this.getTarget(t,a.target))&&(e=this.castStatusBool(e,t.paused),t.paused!==e&&t.setPause(e))}pauseTargetClones({STATUS:e,TARGET:t},a){if(e=this.castStatusStr(e),t=this.getTarget(t,a.target))for(const a of t.sprite.clones.slice(1))a.paused!==e&&a.setPause(this.castStatusBool(e,a.paused))}pauseTargetClone({STATUS:e,TARGET:t,VARIABLE:a,VALUE:u},r){if(t=this.getTarget(t,r.target))for(const r of t.sprite.clones.slice(1)){const o=r.lookupVariableById(this.convertVariableName(s.toString(a),t));o&&(0===s.compare(o.value,u)&&(e=this.castStatusBool(e,r.paused),r.paused!==e&&r.setPause(e)))}}pauseThread(e,t){t.thread.setStatus(l.STATUS_PAUSED)}pauseThreadName({STATUS:e,NAME:t}){(t=getThreadFromPID(s.toString(t)))&&(e=this.castStatusBool(e,t.status===l.STATUS_PAUSED),t.setStatus(e))}getPauseStatus(){return this.pauseStatus}onStatusChange(){return!0}castStatusStr(e){return"pause"===(e=s.toString(e).toLowerCase())||"unpause"===e||"toggle"===e?e:"toggle"}castStatusBool(e,t){return"pause"===(e=this.castStatusStr(e))||"toggle"===e&&!(t??this.pauseStatus)}getTarget(e,t){return"_myself_"===(e=s.toString(e))?t:(e=r.getTargetById(e)||r.getSpriteTargetByName(e))||t}getVariables(){let e=u.editingTarget;const t=function(){if(!p)return{};const e=p.selected;if(!e)return{};const t={};for(const a of e.inputList){for(const e of a.fieldRow)e.isCurrentlyEditable()&&(t[e.name]=e.getValue());if(!a.connection)continue;const e=a.connection.targetConnection.sourceBlock_;if(e&&e.isShadow())for(const s of e.inputList)for(const e of s.fieldRow)e.isCurrentlyEditable()&&(t[a.name]=e.getValue())}return t}();if(t&&(e=this.getTarget(t.TARGET,e)),!e)return[{text:"",value:""}];const a=Object.values(e.variables).map((e=>({text:e.name,value:e.id})));return a[0]?a:[{text:"",value:""}]}convertVariableName(e,t){return Object.values(t.variables).find((t=>0===s.compare(t.name,e)||t.id===e)).id}getThreadFromPID(e){return r.threads.find((t=>0===s.compare(t.name,e)||t.id===e))}getCloneFromVariable(e,t,a){for(let u=1;u<a.length;u++){const r=a[u].lookupVariableById(e);if(r&&0===s.compare(r.value,t))return a[u]}return null}getSprites(){let e=[];u.editingTarget&&e.push({text:"myself",value:"_myself_"});for(let t=0;t<r.targets.length;t++){const a=r.targets[t];a.isOriginal&&!a.isStage&&e.push({text:a.getName(),value:a.id})}return e[0]?e:[{text:"",value:""}]}})}(Scratch);