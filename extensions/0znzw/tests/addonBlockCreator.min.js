/**!
 * AddonBlock Creator
 * @author 0znzw <meow@miyo.lol> (@link https://scratch.mit.edu/users/0znzw/)
 * @version 1.0
 * @license MIT AND LGPL-3.0
 * Do not remove this comment
 */
(function(Scratch){"use strict";if(!Scratch.extensions.unsandboxed)throw new Error('"AddonBlock Creator" extension must be ran unsandboxed.');const vm=Scratch.vm,runtime=vm.runtime;class AddonBlockCreator{getInfo(){return{id:"0znzwAddonBlockCreator",name:"Addon block creator",color1:"#b4b4b4",color2:"#9c9c9c",color3:"#646464",blocks:[{blockType:Scratch.BlockType.BUTTON,text:"READ ME",func:"readMe"},{opcode:"registerBlock",blockType:Scratch.BlockType.COMMAND,text:"create new block with text of: [TEXT] and callback js of: [JAVASCRIPT]",arguments:{TEXT:{type:Scratch.ArgumentType.STRING,defaultValue:"eval [js]"},ARG_MAPPING:{type:Scratch.ArgumentType.STRING,defaultValue:'["js"]'},JAVASCRIPT:{type:Scratch.ArgumentType.STRING,defaultValue:"eval(args.js);"}}}],menus:{}}}readMe(){alert('The blocks generated will work if you register the block, and they will even save.\nSadly they wont work on scratch as they will be converted to a custom block.\n\n\nArguments:\nThe block is called with the arguments "args".\nSo to use arguments type " args.[argname here] "')}registerBlock(args){function extractArgsFrom(e,r){var t=0,n=[];for(let c=0;c<e.length-e.replaceAll("[","").length;c++){var o=e.substring(e.indexOf("[",t)+1,e.indexOf("]",t));"\\"!=e[e.indexOf("[",t)-1]?(n.push(o),r.bool&&(e=e.replace(`[${o}]`,r.str)),t=e.indexOf("]",t)+1):t=e.indexOf("]",t)+1}return[n,e.replaceAll("\\[","[")]}const generateFunctionFromJS=function(JS){var genJS=function(e){return`(function(args){\n${e}\n})`};return eval(`${genJS(JS)}`)},parsedArgs=extractArgsFrom(args.TEXT,{str:"%s",bool:!0}),callback=generateFunctionFromJS(args.JAVASCRIPT),arguments_=parsedArgs[0],procedureCode=parsedArgs[1];vm.addAddonBlock({arguments:arguments_,procedureCode:procedureCode,callback:callback,hidden:!1})}}Scratch.extensions.register(new AddonBlockCreator)})(Scratch);